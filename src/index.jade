!!! 5
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Server side search

    //- Check out 'src/bower_components/prism/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/prism-funky.css')

    link(rel='stylesheet', type='text/css', href='styles/main.css')

  body

    article

      section
        h1 Server side search
        h3 Michael Pope

      section
        h2 Server Setup
        ul
          li Rails 3.2.x
          li Ransack

      section
        h2 Client Setup
        ul
          li AngularJS 1.0.7
          li Angular-resource
          li Angular-ui-router
          li Jasmine + Karma          

      section
        h2 Best Practices
        ul
          li My AngularJS Rails Example2
          li Second attempt at using AngularJS with Rails
          li Based on a few good tutorials I found
          li Coffeescript
          li Add testing
          li HTML5 pushstate

      section
        h2 Ransack
        h3 Used for searching on the server

      section
        h2 Filters
        h3 Only good for small data sets

      section
        h2 AngualrJS search method
        hr
        code.language-coffeescript
          pre.
            $scope.search = ->
              searchService.setSubject($scope.subject_cont)
              searchService.setBody($scope.body_cont)
          
              # Submit the search
              $http.get('/api/letters?' +
                'q[subject_cont]=' + $scope.subject_cont +
                '&q[body_cont]=' + $scope.body_cont)
              .then ((response) ->
                $scope.letters=response.data
              )

      section
        h2 Rails controller
        hr
        code.language-ruby
          pre.
            class Api::LettersController < Api::BaseController
              def index
                @q=Letter.search(params[:q])
                @letters=@q.result()
                respond_with :api, @letters
              end
            end


      section
        h2 Remember Values
        hr
        code.language-coffeescript
          pre.
            # Retain search variables whilst moving through the application
            app.service('searchService', ->
              subject = ''
              body = ''
              getSubject : -> return subject
              setSubject : (text) -> subject = text
              
              getBody : -> return body
              setBody : (text) -> body = text
            )
        
      section
        h2 References
        ul
          li
            a(href='http://mightygio.com/2013/03/integrating-rails-and-angularjs-part-1-structure/') Mightgio tutorial
          li
            a(href='http://jacobmumm.com/2012/08/28/angular-js-services') Services & Factories explained

      section
        h2 Questions
        ul
          li Michael Pope
          li 
            a(href='https://github.com/map7/angularjs_rails_example2') My example 'angularjs_rails_example2'
          li
            a(href='http://github.com/map7') My Github
          li
            a(href='http://twitter.com/map7') My Twitter @map7

    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    script(src='scripts/prism.ruby.js')
    script(src='scripts/prism-coffeescript.min.js')